{\rtf1\ansi\ansicpg936\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red251\green0\blue7;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\csgray\c0;\cssrgb\c100000\c12195\c0;\cssrgb\c0\c1\c1;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww13880\viewh8800\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Lab02\
\
1. 
\f1\fs22 \cf2 \CocoaLigature0 cat classes.txt | wc -l\
2.cut -f1 classes.txt | uniq | wc -l\
3.cut -f1 classes.txt | uniq -c | sort -r | head -1\
4.egrep -v 'LAB' classes.txt | cut -f5 | sort | uniq -c | sort -r | head -1\
5.cut -f4 classes.txt | cut -c1-6 | sort | uniq -c | sort -r | head -1\
6.egrep 'COMP' classes.txt | cut -f1,3,4 | cut -c1-19 | sort | uniq -d | cut -f1 | uniq\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf3 egrep 'COMP' classes.txt | cut -f1,3,4 | cut -c1-19 | uniq -d | cut -f1 | uniq\
\
\cf4 1. digits.sh\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 #!/bin/sh\
\
while read x\
do\
echo $x | tr '[0-4]' '<' | tr '[6-9]' '>'\
done\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 2. echon.sh\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 #!/bin/sh\
\
read x y\
if egrep -q "^-" <<< "$x"\
then echo "./echon.sh: argument 1 must be a non-negative integer"\
elif egrep -q "[a-z][A-z]*" <<< "$x"\
then echo "./echon.sh: argument 1 must be a non-negative integer"\
elif egrep -q "^$" <<< "$x$y"\
then echo "Usage: ./echon.sh <number of lines> <string>"\
elif egrep -q " " <<< "$y"\
then echo "Usage: ./echon.sh <number of lines> <string>"\
else\
for ((num=0;num<$x;num++))\
do echo "$y"\
done\
fi\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf3 #!/bin/shw\
\
x=$1\
y=$2\
if egrep -q "^-" <<< "$x"\
then echo "./echon.sh: argument 1 must be a non-negative integer"\
elif egrep -q "[a-z][A-z]*" <<< "$x"\
then echo "./echon.sh: argument 1 must be a non-negative integer"\
elif egrep -q "^$" <<< "$x$y"\
then echo "Usage: ./echon.sh <number of lines> <string>"\
elif egrep -q ".+" <<< "$3"\
then echo "Usage: ./echon.sh <number of lines> <string>"\
else\
for ((num=0;num<$x;num++))\
do echo "$y"\
done\
fi\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\
3. file_sized.sh\
\
#!/bin/sh\
\
small=''\
medium=''\
large=''\
\
for file in *\
do\
size=$(cat $file | wc -l | sed 's/ //g')\
if [ $size -gt -1 -a $size -lt 9 ]\
then small="$small $file"\
elif [ $size -gt 9 -a $size -lt 100 ]\
then medium="$medium $file"\
else\
large="$large $file"\
fi\
done\
\
echo Small files: $small\
echo Medium-sized files: $medium\
echo Large files: $large}